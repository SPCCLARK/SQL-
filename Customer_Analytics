SELECT * FROM BIT_DB.customers LIMIT 20 ;
SELECT * FROM BIT_DB.JanSales LIMIT 20 ;


/*    How many orders were placed in January? Remember to filter out the blank and incorrect order IDs like we did in the "dealing with messy data" section of the previous lesson!    */

SELECT COUNT(orderid) 
    FROM BIT_DB.customers
    WHERE length(order_id) = 6
    AND order_id <> "Order ID" ;

/*   How many of those orders were for an iPhone?   */
SELECT 
    count(orderID) 
    FROM BIT_DB.JanSales 
    WHERE Product = "iPhone" ;
  
/*   Select the customer account numbers for all the orders that were placed in February.   */  
SELECT distinct acctnum
    FROM BIT_DB.customers cust
    INNER JOIN BIT_DB.FebSales Feb
    ON cust.order_id=FEB.orderid
    WHERE length(orderid) = 6 
    AND orderid <> 'Order ID' ;
  
/*   Which product was the cheapest one sold in January, and what was the price?     */   

SELECT Product, min(price) FROM BIT_DB.JanSales; 

/*   What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).   */

SELECT
     Product, sum(Quantity), 
     sum(Quantity)*price 
    AS revenue 
    FROM  BIT_DB.FebSales
    WHERE location = "548 Lincoln St, Seattle, WA 98101" ;
    
/*    Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?  */

SELECT 
    acctnum, Product, Quantity, sum(Quantity*price)
    AS amnt_spent
    FROM BIT_DB.FebSales
    LEFT OUTER JOIN BIT_DB.customers
    WHERE Quantity < 2  ;
    
/*  How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?  */

SELECT 
    SUM(quantity), price, product
    FROM BIT_DB.JanSales
    GROUP BY product, price ;


SELECT 
    orderdate 
    FROM BIT_DB.FebSales 
    WHERE orderdate between "02/13/19 00:00" AND "02/18/19 00:00" ;


SELECT 
    location 
    FROM BIT_DB.FebSales
    WHERE orderdate = "02/18/19 01:35";


SELECT 
    sum(quantity)
    FROM BIT_DB.FebSales
    WHERE orderdate LIKE "02/18/19%"; 


SELECT DISTINCT 
    Product, Price 
    FROM BIT_DB.FebSales 
    WHERE Price LIKE "%.99" ;

/* List all the products sold in Los Angeles in February, and include how many of each were sold. */

SELECT 
    location, Product, SUM(Quantity) 
    FROM BIT_DB.FebSales
    WHERE location LIKE "%Los Angeles%"
    GROUP BY Product ;


/*  Which locations in New York received at least 3 orders in January, and how many orders did they each receive? */  

SELECT 
    location, COUNT(orderID)   
    FROM BIT_DB.JanSales 
    WHERE location  LIKE "%NY%" 
    AND length(orderID) = 6
    AND orderID <> "Order ID"
    GROUP BY location
    HAVING COUNT(orderID)>2 ;

/*  How many of each type of headphone were sold in February? */

SELECT 
    Product, SUM(Quantity) 
    FROM BIT_DB.FebSales 
    WHERE Product LIKE "%Headphones%"
    GROUP BY Product ; 
 
/*  What was the average amount spent per account in February? */ 

SELECT 
    avg(quantity*price)
    FROM BIT_DB.FebSales Feb
    LEFT JOIN BIT_DB.customers cust
    ON FEB.orderid=cust.order_id
    WHERE length(orderid) = 6 
    AND orderid <> "Order ID";

/*  What was the average quantity of products purchased per account in February? */ 
 
select 
    sum(quantity)/count(cust.acctnum)
    FROM BIT_DB.FebSales Feb
    LEFT JOIN BIT_DB.customers cust
    ON FEB.orderid=cust.order_id
    WHERE length(orderid) = 6 
    AND orderid <> "Order ID";

/*  Which product brought in the most revenue in January and how much revenue did it bring in total? */   

SELECT 
    Product, SUM(quantity*price) AS total_revenue 
    FROM BIT_DB.JanSales
    GROUP BY Product 
    ORDER by SUM(quantity*price) desc
    LIMIT 1 ; 

    
